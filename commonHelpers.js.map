{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst timeDataEl = document.querySelector('#datetime-picker');\n\nconst btnTimerEl = document.querySelector('[data-start]');\nconst days = document.querySelector('[data-days]');\nconst hours = document.querySelector('[data-hours]');\nconst minutes = document.querySelector('[data-minutes]');\nconst seconds = document.querySelector('[data-seconds]');\nlet time = null;\n\nlet userSelectedDate = null;\nbtnTimerEl.setAttribute('disabled', '');\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    time = Date.now();\n\n    if (userSelectedDate < time) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      btnTimerEl.setAttribute('disabled', '');\n    } else {\n      btnTimerEl.removeAttribute('disabled', '');\n    }\n  },\n};\n\nbtnTimerEl.addEventListener('click', () => {\n  const intervalId = setInterval(\n    () => {\n      const timer = convertMs(userSelectedDate - Date.now());\n      days.textContent = addLeadingZero(timer.days);\n      hours.textContent = addLeadingZero(timer.hours);\n      minutes.textContent = addLeadingZero(timer.minutes);\n      seconds.textContent = addLeadingZero(timer.seconds);\n\n      if (userSelectedDate - Date.now() <= 1000) {\n        clearInterval(intervalId);\n        timeDataEl.removeAttribute('disabled', '');\n      }\n    },\n    1000,\n    userSelectedDate,\n    time\n  );\n  btnTimerEl.setAttribute('disabled', '');\n  timeDataEl.setAttribute('disabled', '');\n});\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nflatpickr(timeDataEl, options);"],"names":["timeDataEl","btnTimerEl","days","hours","minutes","seconds","time","userSelectedDate","options","selectedDates","iziToast","intervalId","timer","convertMs","addLeadingZero","ms","value","flatpickr"],"mappings":"+IAMA,MAAMA,EAAa,SAAS,cAAc,kBAAkB,EAEtDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EACvD,IAAIC,EAAO,KAEPC,EAAmB,KACvBN,EAAW,aAAa,WAAY,EAAE,EACtC,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAClCH,EAAO,KAAK,MAERC,EAAmBD,GACrBI,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,EACDT,EAAW,aAAa,WAAY,EAAE,GAEtCA,EAAW,gBAAgB,WAAY,EAAE,CAE5C,CACH,EAEAA,EAAW,iBAAiB,QAAS,IAAM,CACzC,MAAMU,EAAa,YACjB,IAAM,CACJ,MAAMC,EAAQC,EAAUN,EAAmB,KAAK,IAAK,CAAA,EACrDL,EAAK,YAAcY,EAAeF,EAAM,IAAI,EAC5CT,EAAM,YAAcW,EAAeF,EAAM,KAAK,EAC9CR,EAAQ,YAAcU,EAAeF,EAAM,OAAO,EAClDP,EAAQ,YAAcS,EAAeF,EAAM,OAAO,EAE9CL,EAAmB,KAAK,IAAG,GAAM,MACnC,cAAcI,CAAU,EACxBX,EAAW,gBAAgB,WAAY,EAAE,EAE5C,EACD,IACAO,EACAD,CACJ,EACEL,EAAW,aAAa,WAAY,EAAE,EACtCD,EAAW,aAAa,WAAY,EAAE,CACxC,CAAC,EACD,SAASa,EAAUE,EAAI,CAMrB,MAAMb,EAAO,KAAK,MAAMa,EAAK,KAAG,EAC1BZ,EAAQ,KAAK,MAAOY,EAAK,MAAO,IAAI,EACpCX,EAAU,KAAK,MAAQW,EAAK,MAAO,KAAQ,GAAM,EACjDV,EAAU,KAAK,MAASU,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAb,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASS,EAAeE,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEAC,EAAUjB,EAAYQ,CAAO"}